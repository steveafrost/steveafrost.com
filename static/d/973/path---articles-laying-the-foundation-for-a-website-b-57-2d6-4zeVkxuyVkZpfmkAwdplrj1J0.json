{"data":{"site":{"siteMetadata":{"title":"Steve Frost – Front-End Engineer","author":"Steve Frost"}},"markdownRemark":{"id":"9bae8fc1-6703-5d95-9a15-bbfdc6fa083e","html":"<p><img src=\"/img/blogs/buildingawebsite1.jpg\" alt=\"building-a-website-featured-photo\"></p>\n<p>So you’ve been asked to make a website for a friend, family, neighbor, and maybe even a paying client? One of the first questions to answer is what platform or framework is best to use for this particular job. For years, it was between <a href=\"https://lifehacker.com/5965141/how-to-find-the-perfect-way-to-build-your-web-site-for-coders-and-non-coders-alike\">several great options</a> which included anything from drag-and-drop to content management systems. In the past few years, we’ve also seen another options emerge: static site generators. Here we’ll try to breakdown what are the benefits and drawbacks of each style so that you can get started on the right foot.</p>\n<h3>Drag-and-drop - <a href=\"http://www.wix.com/\">Wix</a> / <a href=\"https://www.squarespace.com/\">Squarespace</a></h3>\n<p>Drag-and-drop site builders have been snatching up all the commercials in the past few years and it’s led them to be a really popular option. You’d think they just started the business but believe it or not, the more popular drag-and-drop site builders got their start <a href=\"https://www.squarespace.com/about/company/\">as early as 2004</a>. I didn’t believe it. Two of the most popular options - Wix &#x26; Squarespace - share that users have used their services to create multiple millions of websites.</p>\n<ul>\n<li>\n<p>Benefits</p>\n<ul>\n<li>Easy, quick to setup</li>\n<li>Abbreviated admin dashboard UI to make updates - user friendly</li>\n<li>There is usually a free option available</li>\n<li>No technical maintenance required</li>\n</ul>\n</li>\n<li>\n<p>Drawbacks</p>\n<ul>\n<li>Free options usually place ads on your site</li>\n<li>Limited customizability, extensibility</li>\n<li>High monthly fee when website grows or you want to remove ads</li>\n</ul>\n</li>\n</ul>\n<h3>Content Management Systems (CMS) - <a href=\"https://wordpress.com/\">WordPress</a> / <a href=\"https://www.joomla.org/\">Joomla</a></h3>\n<p>Since WordPress makes up almost 60% of this category, we’ll stick to talking about it. WordPress is also 27% of the total web right now which means there is a tremendous community around it. WordPress is most commonly used for a blogging system - hence content management - and I would say it fits that need perfectly. Since 2003, they’ve been iterating on WordPress to make it the most robust website solution around.</p>\n<ul>\n<li>\n<p>Benefits</p>\n<ul>\n<li>Can be self-hosted (you own your content)</li>\n<li>Full administrator dashboard UI - user friendly</li>\n<li>Massive community means support forums are filled with answers to common questions</li>\n<li>Extensibility through 3rd-party plugins</li>\n</ul>\n</li>\n<li>\n<p>Drawbacks</p>\n<ul>\n<li>If self-hosting, technical maintenance is required</li>\n<li>Includes a database which can be a source of vulnerability</li>\n<li>Some knowledge required to do initial setup</li>\n</ul>\n</li>\n</ul>\n<h3>Static Website Generators - <a href=\"https://jekyllrb.com/\">Jekyll</a> / <a href=\"https://middlemanapp.com/\">Middleman</a></h3>\n<p>Robust is good if you need it but sometimes WordPress can be like using a sledgehammer to crack a nut. After making several sites of varying use from WordPress, I found the latest trend of static website generators very liberating. It is almost full circle from how websites were originally created - a group of HTML files, a group of CSS files, and maybe a JS file if the site was gettin’ fancy. These generators take that idea one step further and usually incorporate some type of <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter</a>, loops, and other intricacies <a href=\"http://tutorials.jumpstartlab.com/topics/better_views/erb_and_haml.html\">provided by a templating language</a>. As you’ve guessed by the last few sentences, these generators are the hardest of the three options to setup but they also provide a spectacular payoff.</p>\n<ul>\n<li>\n<p>Benefits</p>\n<ul>\n<li>Fastest page loads of all options - really, really fast</li>\n<li>No database means no vulnerabilities like WordPress</li>\n<li>Extremely customizable &#x26; extendable</li>\n<li>Jekyll pages can be <a href=\"https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/\">hosted for free</a> on GitHub pages</li>\n</ul>\n</li>\n<li>\n<p>Drawbacks</p>\n<ul>\n<li>Intermediate knowledge of programming required to setup</li>\n<li>If changes are needed, there is no user friendly dashboard like other options have</li>\n<li>Depending on where it is hosted, there may be server maintenance involved</li>\n</ul>\n</li>\n</ul>\n<h3>Wrap-Up</h3>\n<p>If it isn’t evident, I have grown partial to the static website generator option. It’s true, I am absolutely in love with it right now and this site is actually built with one of those - Jekyll. I’m also working on another site that uses the other static option, Middleman, and will be doing a post about my experiences with it once I’m finished.</p>\n<p>All that said, when taking on a job it is always best to think which one of these options is the right tool for the job. Taking time to craft a plan before starting can seem like procrastination or running in place but it almost always pays off in the long run. <a href=\"http://travisneilson.com/\">Travis Neilson</a> said it best in his <a href=\"https://www.youtube.com/watch?v=VcMjo_wczCc\">DevTips YouTube Series</a> when he said, “a large part of this job is thinking, and planning, and organizing.”</p>","frontmatter":{"title":"Laying the Foundation for a Website","date":"February 13, 2017"}}},"pageContext":{"slug":"/articles/laying-the-foundation-for-a-website/"}}